// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Connection struct {
	ID              string  `bson:"id"`
	ContactUsername string  `bson:"contact_username"`
	Contact         *User   `bson:"contact"`
	Debt            float64 `bson:"debt"`
	CreatedAt       string  `bson:"created_at"`
}

type InvoiceOrPayment struct {
	ID                string      `bson:"id"`
	CreatedByUsername string      `bson:"created_by_username"`
	CreatedBy         *User       `bson:"created_by"`
	ConnectionID      string      `bson:"connection_id"`
	Connection        *Connection `bson:"connection"`
	Amount            float64     `bson:"amount"`
	CreatedAt         string      `bson:"created_at"`
}

type InvoiceOrPaymentInput struct {
	CreatedByUsername string  `bson:"created_by_username"`
	ConnectionID      string  `bson:"connection_id"`
	Amount            float64 `bson:"amount"`
}

type InvoiceOrPaymentResult struct {
	Success bool              `bson:"success"`
	Invoice *InvoiceOrPayment `bson:"invoice"`
	Errors  []string          `bson:"errors"`
}

type Result struct {
	Success bool     `bson:"success"`
	Errors  []string `bson:"errors"`
}

type User struct {
	ID            string              `bson:"id"`
	Username      string              `bson:"username"`
	Hash          string              `bson:"hash"`
	DisplayName   string              `bson:"display_name"`
	CreatedAt     string              `bson:"created_at"`
	InvoiceIds    []string            `bson:"invoice_ids"`
	Invoices      []*InvoiceOrPayment `bson:"invoices"`
	PaymentIds    []string            `bson:"payment_ids"`
	Payments      []*InvoiceOrPayment `bson:"payments"`
	ConnectionIds []string            `bson:"connection_ids"`
	Connections   []*Connection       `bson:"connections"`
}

type UserAuthResult struct {
	Success bool     `bson:"success"`
	User    *User    `bson:"user"`
	Token   string   `bson:"token"`
	Errors  []string `bson:"errors"`
}

type UserInput struct {
	Username string `bson:"username"`
	Password string `bson:"password"`
}

type UserResult struct {
	Success bool     `bson:"success"`
	User    *User    `bson:"user"`
	Errors  []string `bson:"errors"`
}

type UsersResult struct {
	Success bool     `bson:"success"`
	Users   []*User  `bson:"users"`
	Errors  []string `bson:"errors"`
}
