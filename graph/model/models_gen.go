// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Invoice struct {
	ID                 string  `bson:"id"`
	CreatedByUsername  string  `bson:"created_by_username"`
	CreatedBy          *User   `bson:"created_by"`
	InvoicedToUsername string  `bson:"invoiced_to_username"`
	InvoicedTo         *User   `bson:"invoiced_to"`
	Amount             float64 `bson:"amount"`
	CreatedAt          string  `bson:"created_at"`
}

type InvoiceInput struct {
	CreatedByUsername  string  `bson:"created_by_username"`
	InvoicedToUsername string  `bson:"invoiced_to_username"`
	Amount             float64 `bson:"amount"`
}

type InvoiceResult struct {
	Success bool     `bson:"success"`
	Invoice *Invoice `bson:"invoice"`
	Errors  []string `bson:"errors"`
}

type Payment struct {
	ID                string  `bson:"id"`
	CreatedByUsername string  `bson:"created_by_username"`
	CreatedBy         *User   `bson:"created_by"`
	PaidToUsername    string  `bson:"paid_to_username"`
	PaidTo            *User   `bson:"paid_to"`
	Amount            float64 `bson:"amount"`
	CreatedAt         string  `bson:"created_at"`
}

type PaymentInput struct {
	CreatedByUsername string  `bson:"created_by_username"`
	PaidToUsername    string  `bson:"paid_to_username"`
	Amount            float64 `bson:"amount"`
}

type PaymentResult struct {
	Success bool     `bson:"success"`
	Payment *Payment `bson:"payment"`
	Errors  []string `bson:"errors"`
}

type Result struct {
	Success bool     `bson:"success"`
	Errors  []string `bson:"errors"`
}

type User struct {
	ID          string     `bson:"id"`
	Username    string     `bson:"username"`
	Hash        string     `bson:"hash"`
	DisplayName string     `bson:"display_name"`
	CreatedAt   string     `bson:"created_at"`
	InvoiceIds  []string   `bson:"invoice_ids"`
	Invoices    []*Invoice `bson:"invoices"`
	PaymentIds  []string   `bson:"payment_ids"`
	Payments    []*Payment `bson:"payments"`
	ContactIds  []string   `bson:"contact_ids"`
	Contacts    []*User    `bson:"contacts"`
}

type UserAuthResult struct {
	Success bool     `bson:"success"`
	User    *User    `bson:"user"`
	Token   string   `bson:"token"`
	Errors  []string `bson:"errors"`
}

type UserInput struct {
	Username string `bson:"username"`
	Password string `bson:"password"`
}

type UserResult struct {
	Success bool     `bson:"success"`
	User    *User    `bson:"user"`
	Errors  []string `bson:"errors"`
}

type UsersResult struct {
	Success bool     `bson:"success"`
	Users   []*User  `bson:"users"`
	Errors  []string `bson:"errors"`
}
