type PartialUser {
	id: ID!
	username: String!
	display_name: String!
	connection_ids: [ID!]!
	connections: [Connection!]!
	created_at: String!
}

type User {
	id: ID!
	username: String!
	hash: String!
	display_name: String!
	created_at: String!
	invoice_ids: [ID!]!
	invoices: [InvoiceOrPayment!]!
	payment_ids: [ID!]!
	payments: [InvoiceOrPayment!]!
	connection_ids: [ID!]!
	connections: [UserConnection!]!
}

type Connection {
	id: ID!
	username1: String!
	user1: User!
	username2: String!
	user2: User!
	debt: Float!
	created_at: String!
}

type UserConnection {
	id: ID!
	contact_username: String!
	contact: User!
	debt: Float!
	created_at: String!
}

type UserResult {
	success: Boolean!
	user: User
	errors: [String!]
}

type ConnectionResult {
	success: Boolean!
	connection: Connection
	errors: [String!]
}

type UsersResult {
	success: Boolean!
	users: [User!]
	errors: [String!]
}

type UserAuthResult {
	success: Boolean!
	user: User
	token: String!
	errors: [String!]
}

type InvoiceOrPayment {
	id: ID!
	created_by_username: String!
	created_by: User!
	connection_id: ID!
	connection: Connection!
	amount: Float!
	created_at: String!
}

type InvoiceResult {
	success: Boolean!
	invoice: InvoiceOrPayment
	errors: [String!]
}

type PaymentResult {
	success: Boolean!
	payment: InvoiceOrPayment
	errors: [String!]
}

type Result {
	success: Boolean!
	errors: [String!]
}

input UserInput {
	username: String!
	password: String!
}

input InvoiceOrPaymentInput {
	created_by_username: String!
	connection_id: ID!
	amount: Float!
}

type Query {
	user(username: String!): UserResult!
	getFilteredUsers(partialUsername: String!): UsersResult!
}

type Mutation {
	createUser(input: UserInput!): UserAuthResult!
	login(input: UserInput!): UserAuthResult!
	deleteUser(username: String!): Result!
	createConnection(username1: String!, username2: String!): ConnectionResult!
	createInvoice(input: InvoiceOrPaymentInput!): InvoiceResult!
	createPayment(input: InvoiceOrPaymentInput!): PaymentResult!
}
